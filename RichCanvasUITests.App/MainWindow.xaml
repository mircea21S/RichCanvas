<Window x:Class="RichCanvasUITests.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RichCanvasUITests.App"
        xmlns:scs="clr-namespace:System.Collections.Specialized;assembly=System"
        xmlns:auto="clr-namespace:RichCanvasUITests.App.Automation"
        xmlns:models="clr-namespace:RichCanvasUITests.App.Models"
        xmlns:richCanvas="clr-namespace:RichCanvas;assembly=RichCanvas"
        xmlns:statePresenters="clr-namespace:RichCanvasUITests.App.StatePresenters"
        mc:Ignorable="d"
        Title="MainWindow"
        WindowState="Maximized">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="Separator">
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="Height"
                    Value="2" />
            <Setter Property="Margin"
                    Value="5,5,5,5" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="1"
                    Width="150">

            <TextBlock Text="Drawing State Tests" />
            <statePresenters:DrawingStateView DataContext="{Binding DrawingState}" />
            <Separator />

            <TextBlock Text="Multiple Selection State Tests" />
            <statePresenters:MultipleSelectionStateView DataContext="{Binding MultipleSelectionState}" />
            <Separator />

            <TextBlock Text="Single Selection State Tests" />
            <statePresenters:SingleSelectionStateView DataContext="{Binding SingleSelectionState}" />
            <Separator />

            <Button Command="{Binding UpdateItemsSourceCommand}"
                    CommandParameter="{x:Static scs:NotifyCollectionChangedAction.Move}"
                    AutomationProperties.AutomationId="{x:Static auto:AutomationIds.MoveFirstItemToTheEndButtonId}"
                    Content="Move First Item"></Button>

            <Button Command="{Binding UpdateItemsSourceCommand}"
                    CommandParameter="{x:Static scs:NotifyCollectionChangedAction.Remove}"
                    AutomationProperties.AutomationId="{x:Static auto:AutomationIds.RemoveFirstItemButtonId}"
                    Content="Remove First Item"></Button>

            <Button Command="{Binding SwitchItemsPositionCommand}"
                    Content="Switch Items"></Button>

            <Button Command="{Binding ClearAllItemsCommand}"
                    AutomationProperties.AutomationId="{x:Static auto:AutomationIds.ClearItemsButtonId}"
                    Content="Clear all items">
            </Button>

            <Border Name="ToggleProperties"
                    BorderThickness="1"
                    BorderBrush="BlueViolet"
                    Margin="2">
                <StackPanel>
                    <ToggleButton AutomationProperties.AutomationId="{x:Static auto:AutomationIds.RealTimeSelectionToggleButtonId}"
                                  IsChecked="{Binding RealTimeSelectionEnabled, Mode=TwoWay}"
                                  Content="RealTimeSelection">
                    </ToggleButton>

                    <ToggleButton AutomationProperties.AutomationId="{x:Static auto:AutomationIds.CanSelectMultipleItemsToggleButtonId}"
                                  IsChecked="{Binding CanSelectMultipleItems, Mode=TwoWay}"
                                  Content="CanSelectMultipleItems">
                    </ToggleButton>

                    <ToggleButton AutomationProperties.AutomationId="{x:Static auto:AutomationIds.RealTimeDraggingToggleButtonId}"
                                  IsChecked="{Binding RealTimeDraggingEnabled, Mode=TwoWay}"
                                  Content="RealTimeDragging">
                    </ToggleButton>
                </StackPanel>
            </Border>

            <Border Name="SelectedItemProperties"
                    BorderThickness="1"
                    BorderBrush="Black"
                    Margin="2">
                <StackPanel>
                    <TextBlock Text="{Binding SelectedItem.Height, StringFormat= '\{0\} height'}" />
                    <TextBlock Text="{Binding SelectedItem.Width, StringFormat='\{0\} width'}" />
                    <TextBlock Text="{Binding SelectedItem.Top, StringFormat='\{0\} top'}" />
                    <TextBlock Text="{Binding SelectedItem.Left, StringFormat='\{0\} left'}" />
                </StackPanel>
            </Border>

            <TextBlock Text="{Binding MousePosition, ElementName=source, StringFormat='\{0\} mouse position'}"></TextBlock>
            <TextBlock Text="{Binding ItemsSource.Count, ElementName=source, StringFormat='\{0\} items'}"></TextBlock>
            <TextBlock Text="{Binding SelectedItems.Count, ElementName=source, StringFormat='\{0\} selected items'}"></TextBlock>
            <TextBlock Text="{Binding ViewportLocation, StringFormat='\{0\} viewport location'}"
                       AutomationProperties.AutomationId="{x:Static auto:AutomationIds.ViewportLocationTextBlockId}"></TextBlock>
            <TextBlock Text="{Binding ViewportSize, StringFormat='\{0\} viewport size'}"></TextBlock>

            <Border BorderThickness="1"
                    BorderBrush="Black"
                    Margin="2">
                <StackPanel>
                    <Button AutomationProperties.AutomationId="{x:Static auto:AutomationIds.ResetViewportLocationButtonId}"
                            Content="Reset Viewport Location"
                            Command="{Binding ResetViewportLocation}" />
                    <Button AutomationProperties.AutomationId="{x:Static auto:AutomationIds.SetViewportLocationValueButtonId}"
                            Content="Set Viewport Location Value"
                            Command="{Binding SetViewportLocationValue}" />
                </StackPanel>
            </Border>
        </StackPanel>

        <ScrollViewer CanContentScroll="True"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
            <richCanvas:RichItemsControl Background="AliceBlue"
                                         ItemsSource="{Binding Items}"
                                         SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                         SelectedItems="{Binding SelectedItems}"
                                         RealTimeSelectionEnabled="{Binding RealTimeSelectionEnabled}"
                                         CanSelectMultipleItems="{Binding CanSelectMultipleItems}"
                                         RealTimeDraggingEnabled="{Binding RealTimeDraggingEnabled}"
                                         DrawingEndedCommand="{Binding DrawingState.DrawingEndedCommand}"
                                         ViewportLocation="{Binding ViewportLocation, Mode=TwoWay}"
                                         ViewportSize="{Binding ViewportSize, Mode=OneWayToSource}"
                                         ScrollFactor="100"
                                         Name="source">
                <richCanvas:RichItemsControl.Resources>
                    <DataTemplate DataType="{x:Type local:RichItemContainerModel}">
                        <Rectangle Fill="Red"></Rectangle>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type models:Line}">
                        <Line  Stroke="Red"
                               StrokeThickness="3"
                               X2="{Binding Width}"
                               Y2="{Binding Height}">
                        </Line>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type models:DrawingEndedRepresentation}">
                        <TextBlock Text="DRAWING ENDED"
                                   AutomationProperties.AutomationId="{x:Static auto:AutomationIds.DrawingEndedTextBoxId}" />
                    </DataTemplate>
                </richCanvas:RichItemsControl.Resources>

                <richCanvas:RichItemsControl.ItemContainerStyle>
                    <Style TargetType="richCanvas:RichItemContainer">

                        <Setter Property="Top"
                                Value="{Binding Top, Mode=TwoWay}" />

                        <Setter Property="Left"
                                Value="{Binding Left, Mode=TwoWay}" />

                        <Setter Property="Width"
                                Value="{Binding Width, Mode=TwoWay}" />

                        <Setter Property="Height"
                                Value="{Binding Height, Mode=TwoWay}" />

                        <Setter Property="AllowScaleChangeToUpdatePosition"
                                Value="{Binding AllowScaleChangeToUpdatePosition}" />

                        <Style.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Opacity"
                                        Value="0.6" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </richCanvas:RichItemsControl.ItemContainerStyle>
            </richCanvas:RichItemsControl>
        </ScrollViewer>
    </Grid>
</Window>
